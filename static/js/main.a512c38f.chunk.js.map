{"version":3,"sources":["components/CountDown/CountDown.module.scss","components/Gallery/Gallery.module.scss","components/Location/Location.module.scss","images/invite.png","images/gallery/1.jpeg","images/gallery/2.jpeg","images/gallery/3.jpeg","images/gallery/4.jpeg","images/gallery/5.jpeg","images/gallery/6.jpeg","components/Footer/Footer.module.scss","components/Date/Date.js","components/CountDown/CountDown.js","components/Gallery/Gallery.js","components/Location/Location.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Date","src","invitation","alt","CountDown","useState","isExpired","setIsExpired","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","useEffect","countDownDate","getTime","x","setInterval","now","distance","day","Math","floor","hour","minute","second","clearInterval","className","styles","counterArea","container","row","heading","title","remainingTime","clock","timeSec","time","Gallery","imageFilenames","image1","image2","image3","image4","image5","image6","showThumbs","showStatus","showArrows","autoPlay","infiniteLoop","interval","imageSlider","map","image","index","key","sliderImageContainer","sliderImage","Location","location","class","width","height","id","frameborder","scrolling","marginheight","marginwidth","Footer","footer","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,QAAU,2BAA2B,YAAc,+BAA+B,MAAQ,yBAAyB,QAAU,2BAA2B,KAAO,wBAAwB,MAAQ,2B,iBCAjND,EAAOC,QAAU,CAAC,YAAc,6BAA6B,qBAAuB,sCAAsC,YAAc,+B,gBCAxID,EAAOC,QAAU,CAAC,SAAW,2BAA2B,IAAM,sBAAsB,MAAQ,0B,wBCD5FD,EAAOC,QAAU,IAA0B,oC,iBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCC3CD,EAAOC,QAAU,CAAC,OAAS,yB,4OCUZC,EARF,WACT,OACI,6BACI,yBAAKC,IAAKC,IAAYC,IAAI,iB,uBC4EvBC,EA/EG,WAAO,IAAD,EACcC,oBAAS,GADvB,mBACbC,EADa,KACFC,EADE,OAEIF,mBAAS,GAFb,mBAEbG,EAFa,KAEPC,EAFO,OAGMJ,mBAAS,GAHf,mBAGbK,EAHa,KAGNC,EAHM,OAIUN,mBAAS,GAJnB,mBAIbO,EAJa,KAIJC,EAJI,OAKUR,mBAAS,GALnB,mBAKbS,EALa,KAKJC,EALI,KA+CpB,OAzCAC,oBAAU,WACN,IAAMC,EAAgB,IAAIjB,KAAK,wBAAwBkB,UACjDC,EAAIC,YAAY,WAGlB,IAAMC,GAAM,IAAIrB,MAAOkB,UAGjBI,EAAWL,EAAgBI,EAG3BE,EAAMC,KAAKC,MAAMH,EAAQ,OACzBI,EAAOF,KAAKC,MAAOH,EAAQ,MAAT,MAClBK,EAASH,KAAKC,MAAOH,EAAQ,KAAT,KACpBM,EAASJ,KAAKC,MAAOH,EAAQ,IAAkB,KACjDd,IAASe,GACTd,EAAQc,GAERb,IAAUgB,GACVf,EAASe,GAETd,IAAYe,GACZd,EAAWc,GAEXb,IAAYc,GACZb,EAAWa,GAIXN,EAAW,IACXO,cAAcV,GACdZ,GAAa,KAElB,KAEH,OAAO,WACHsB,cAAcV,KAGnB,CAACX,EAAME,EAAOE,EAASE,IAGtB,6BAASgB,UAAWC,IAAOC,aACvB,yBAAKF,UAAWC,IAAOE,WACnB,yBAAKH,UAAWC,IAAOG,KACnB,yBAAKJ,UAAU,aACX,yBAAKA,UAAWC,IAAOI,SACnB,wBAAIL,UAAWC,IAAOK,OAAtB,oBAGR,yBAAKN,UAAU,aACf,yBAAKA,UAAU,YAEX,yBAAKA,UAAWC,IAAOM,eAClB/B,EACK,wCAEF,yBAAKwB,UAAWC,IAAOO,OACnB,yBAAKR,UAAWC,IAAOQ,SAAS,uBAAGT,UAAWC,IAAOS,MAAOhC,GAA5D,UACA,yBAAKsB,UAAWC,IAAOQ,SAAS,uBAAGT,UAAWC,IAAOS,MAAO9B,GAA5D,WACA,yBAAKoB,UAAWC,IAAOQ,SAAS,uBAAGT,UAAWC,IAAOS,MAAO5B,GAA5D,aACA,yBAAKkB,UAAWC,IAAOQ,SAAS,uBAAGT,UAAWC,IAAOS,MAAO1B,GAA5D,oB,sIC5BrB2B,EA1BC,WACZ,IAAMC,EAAiB,CAACC,IAAQC,IAAQC,IAAQC,IAAQC,IAAQC,KAEhE,OACE,kBAAC,WAAD,CACEC,YAAY,EACZC,YAAY,EACZC,YAAY,EACZC,UAAQ,EACRC,cAAY,EACZC,SAAU,IACVxB,UAAWC,IAAOwB,aAEjBb,EAAec,IAAI,SAACC,EAAOC,GAAR,OAClB,yBAAKC,IAAKD,EAAO5B,UAAWC,IAAO6B,sBACjC,yBACE3D,IAAKwD,EACLtD,IAAG,gBAAWuD,EAAQ,GACtB5B,UAAWC,IAAO8B,mB,gBCOjBC,EApCE,WACb,OAAS,6BAAShC,UAAU,sCAC9B,yBAAKA,UAAU,aACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,aACf,yBAAKA,UAAU,aAEd,yBAAKA,UAAU,WACd,wBAAIA,UAAU,SAAd,qBAGD,yBAAKA,UAAU,oCACd,yBAAKA,UAAU,kBACd,yBAAKA,UAAWC,IAAO0B,MAAOxD,IAAI,qKAAqKE,IAAK,gBAC5M,wBAAI2B,UAAU,SAAd,qBACA,uBAAGA,UAAWC,IAAOgC,UAArB,iBACqB,4DACrB,gDAEA,yBAAKC,MAAM,WAAWlC,UAAWC,IAAOyB,KACvC,yBAAKQ,MAAM,eACV,4BAAQC,MAAM,OAAOC,OAAO,OAAOC,GAAG,cAAclE,IAAI,sGAAqGmE,YAAY,IAAIC,UAAU,KAAKC,aAAa,IAAIC,YAAY,e,iBCbnNC,EATA,WACX,OACI,6BAAS1C,UAAWC,IAAO0C,QACvB,sDACA,uFCcGC,MAZf,WACE,OACE,yBAAK5C,UAAU,OACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLe6C,QACW,cAA7BC,OAAOb,SAASc,UAEe,UAA7BD,OAAOb,SAASc,UAEhBD,OAAOb,SAASc,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.a512c38f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"CountDown_heading__2ZXUY\",\"counterArea\":\"CountDown_counterArea__2WAy4\",\"clock\":\"CountDown_clock__1rTiu\",\"timeSec\":\"CountDown_timeSec__Utsp4\",\"time\":\"CountDown_time__3xHPU\",\"pulse\":\"CountDown_pulse__HWYFs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageSlider\":\"Gallery_imageSlider__2_QFL\",\"sliderImageContainer\":\"Gallery_sliderImageContainer__fNKx6\",\"sliderImage\":\"Gallery_sliderImage__22qtV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"location\":\"Location_location__19mfv\",\"map\":\"Location_map__wE4H5\",\"image\":\"Location_image__1THMF\"};","module.exports = __webpack_public_path__ + \"static/media/invite.ae831ff0.png\";","module.exports = __webpack_public_path__ + \"static/media/1.9356cc5b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/2.906da2b8.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/3.7652337b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/4.38d3c315.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/5.538e74e7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/6.95efd987.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","import React from 'react';\nimport invitation from '../../images/invite.png';\n\nconst Date = () => {\n    return (\n        <div>\n            <img src={invitation} alt='invitation'/>\n\t\t</div>\n    );\n}\n\nexport default Date;","import React, { useState, useEffect } from 'react';\nimport styles from './CountDown.module.scss';\n\nconst CountDown = () => {\n    const [isExpired, setIsExpired] = useState(false);\n    const [days, setDays] = useState(0);\n    const [hours, setHours] = useState(0);\n    const [minutes, setMinutes] = useState(0);\n    const [seconds, setSeconds] = useState(0);\n    useEffect(() => {\n        const countDownDate = new Date(\"Sep 9, 2023 20:00:00\").getTime();\n        const x = setInterval(() => {\n\n            // Get today's date and time\n            const now = new Date().getTime();\n\n            // Find the distance between now and the count down date\n            const distance = countDownDate - now;\n\n            // Time calculations for days, hours, minutes and seconds\n            const day = Math.floor(distance / (1000 * 60 * 60 * 24));\n            const hour = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            const minute = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            const second = Math.floor((distance % (1000 * 60)) / 1000);\n            if (days !== day) {\n                setDays(day);\n            }\n            if (hours !== hour) {\n                setHours(hour);\n            }\n            if (minutes !== minute) {\n                setMinutes(minute);\n            }\n            if (seconds !== second) {\n                setSeconds(second);\n            }\n\n            // If the count down is finished, write some text \n            if (distance < 0) {\n                clearInterval(x);\n                setIsExpired(true);\n            }\n        }, 1000);\n\n        return () => {\n            clearInterval(x);\n        }\n\n    }, [days, hours, minutes, seconds]);\n\n    return (\n        <section className={styles.counterArea}>\n            <div className={styles.container}>\n                <div className={styles.row}>\n                    <div className=\"col-sm-12\">\n                        <div className={styles.heading}>\n                            <h2 className={styles.title}>Don't miss it!</h2>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-2\"></div>\n                    <div className=\"col-sm-8\">\n\n                        <div className={styles.remainingTime}>\n                            {isExpired\n                                ? <div>Yay....</div>\n                                :\n                                <div className={styles.clock}>\n                                    <div className={styles.timeSec}><p className={styles.time}>{days}</p> Days </div>\n                                    <div className={styles.timeSec}><p className={styles.time}>{hours}</p> Hours </div>\n                                    <div className={styles.timeSec}><p className={styles.time}>{minutes}</p> Minutes </div>\n                                    <div className={styles.timeSec}><p className={styles.time}>{seconds}</p> Seconds </div>\n                                </div>\n                            }\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </section>\n        );\n}\n\nexport default CountDown;\n\n\n","/* eslint-disable jsx-a11y/img-redundant-alt */\n/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\n\nimport styles from './Gallery.module.scss';\n\nimport image1 from '../../images/gallery/1.jpeg';\nimport image2 from '../../images/gallery/2.jpeg';\nimport image3 from '../../images/gallery/3.jpeg';\nimport image4 from '../../images/gallery/4.jpeg';\nimport image5 from '../../images/gallery/5.jpeg';\nimport image6 from '../../images/gallery/6.jpeg';\n\n\nconst Gallery = () => {\n    const imageFilenames = [image1, image2, image3, image4, image5, image6];\n\n    return (\n      <Carousel\n        showThumbs={false}\n        showStatus={false}\n        showArrows={false}\n        autoPlay\n        infiniteLoop\n        interval={2000}\n        className={styles.imageSlider}\n      >\n        {imageFilenames.map((image, index) => (\n          <div key={index} className={styles.sliderImageContainer}>\n            <img\n              src={image}\n              alt={`Image ${index + 1}`}\n              className={styles.sliderImage}\n            />\n          </div>\n        ))}\n      </Carousel>\n    );\n}\n\nexport default Gallery;\n","/* eslint-disable jsx-a11y/iframe-has-title */\nimport React from 'react';\n\nimport styles from './Location.module.scss';\n\nconst Location = () => {\n    return ( <section className=\"section w-details-area center-text\">\n\t\t<div className=\"container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-sm-1\"></div>\n\t\t\t\t<div className=\"col-sm-10\">\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"heading\">\n\t\t\t\t\t\t<h2 className=\"title\">Ceremony Details</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"engagement-details margin-bottom\">\n\t\t\t\t\t\t<div className=\"w-detail right\">\n\t\t\t\t\t\t\t<img className={styles.image} src=\"https://img.freepik.com/free-icon/wedding-ring_318-659720.jpg?t=st=1692088444~exp=1692089044~hmac=93424f17623d84425d698ffd1ac7d6e19f2f97285cbcde2c1fb6fa60aa40d5af\" alt={'placeholder'} />\n\t\t\t\t\t\t\t<h4 className=\"title\">Felice Restaurant</h4>\n\t\t\t\t\t\t\t<p className={styles.location}>Bagrevand 111</p>\n                            <p>Saturday, September 9th, 2023</p>\n\t\t\t\t\t\t\t<p>Time: 7PM Onwards</p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"mapouter\" className={styles.map}>\n\t\t\t\t\t\t\t\t<div class=\"gmap_canvas\">\n\t\t\t\t\t\t\t\t\t<iframe width=\"100%\" height=\"100%\" id=\"gmap_canvas\" src=\"https://maps.google.com/maps?q=110 \tBagrevand St, Yerevan 0067&t=&z=16&ie=UTF8&iwloc=&output=embed\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\">\n\t\t\t\t\t\t\t\t\t</iframe>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div> \n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n    </section>    \n    );\n}\n\nexport default Location;","import React from 'react';\n\nimport styles from './Footer.module.scss';\n\nconst Footer = () => {\n    return (\n        <section className={styles.footer}>\n            <h2>We are waiting for you</h2>\n            <p>Please reply to this message approving your attendance</p>\n        </section>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport './commoncss/bootstrap.css';\nimport './commoncss/font-icon.css';\nimport './App.css';\nimport WeadingDate from './components/Date/Date';\nimport CountDown from './components/CountDown/CountDown';\nimport Gallery from './components/Gallery/Gallery';\nimport Location from './components/Location/Location';\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <WeadingDate />\n     <CountDown />\n     <Gallery />\n     <Location />\n     <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}